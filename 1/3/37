; a

(define (cont-frac n d k)
        (define (iter i running-total)
                (if (= i 0)
                    running-total
                    (iter (- i 1)
                          (/ (n 1) 
                             (+ running-total (d 1))
                          )
                    )
                )
        )
        (iter k 0)
)

; 1/ϕ = ϕ - 1 ≈ 0.6180
; 12 is minimal to get 4 decimal places
(cont-frac (lambda (i) 1.0)
           (lambda (i) 1.0)
           12
)

; b

; the above is an iterative process, so now we'll define a recursive one

(define (r-cont-frac n d k)
    (define (iter i)
        (if (= i k)
            (/ (n k) (d k))
            (/ (n i)
               (+ (d i)
                  (iter (+ i 1))
               )
            )
        )
    ) 

    (iter 1)
)

; 1/ϕ = ϕ - 1 ≈ 0.6180
; 12 is minimal to get 4 decimal places
(cont-frac (lambda (i) 1.0)
           (lambda (i) 1.0)
           12
)
